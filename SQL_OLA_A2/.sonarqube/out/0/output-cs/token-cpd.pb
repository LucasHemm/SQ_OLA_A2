·
WC:\Users\marcu\OneDrive\Dokumenter\GitHub\SQ_OLA_A2\SQL_OLA_A2\SQL_OLA_A2\TaskMapper.cs
	namespace 	

SQL_OLA_A2
 
; 
public 
class 

TaskMapper 
{ 
private  
ApplicationDbContext  
context! (
;( )
public 


TaskMapper 
(  
ApplicationDbContext *
context+ 2
)2 3
{ 
this		 
.		 
context		 
=		 
context		 
;		 
}

 
public 

void 
AddTask 
( 
Task 
task !
)! "
{ 
context 
. 
Tasks 
. 
Add 
( 
task 
) 
;  
context 
. 
SaveChanges 
( 
) 
; 
} 
public 

void 

UpdateTask 
( 
Task 
task  $
)$ %
{ 
context 
. 
Tasks 
. 
Update 
( 
task !
)! "
;" #
context 
. 
SaveChanges 
( 
) 
; 
} 
public 

void 

DeleteTask 
( 
Task 
task  $
)$ %
{ 
context 
. 
Tasks 
. 
Remove 
( 
task !
)! "
;" #
context 
. 
SaveChanges 
( 
) 
; 
} 
public!! 

List!! 
<!! 
Task!! 
>!! 
GetAllTasks!! !
(!!! "
)!!" #
{"" 
return## 
context## 
.## 
Tasks## 
.## 
ToList## #
(### $
)##$ %
;##% &
}$$ 
public'' 

Task'' 
GetTaskById'' 
('' 
int'' 
id''  "
)''" #
{(( 
return)) 
context)) 
.)) 
Tasks)) 
.)) 
Find)) !
())! "
id))" $
)))$ %
;))% &
}** 
}++ ê>
WC:\Users\marcu\OneDrive\Dokumenter\GitHub\SQ_OLA_A2\SQL_OLA_A2\SQL_OLA_A2\TaskFacade.cs
	namespace 	

SQL_OLA_A2
 
{ 
public 

class 

TaskFacade 
{ 
private 
readonly 

TaskMapper #

taskMapper$ .
;. /
public 

TaskFacade 
(  
ApplicationDbContext .
context/ 6
)6 7
{ 	

taskMapper 
= 
new 

TaskMapper '
(' (
context( /
)/ 0
;0 1
} 	
public 
Task 

CreateTask 
( 
string %
description& 1
,1 2
DateTime3 ;
deadline< D
,D E
boolF J

isFinishedK U
,U V
stringW ]
category^ f
)f g
{ 	
ValidateTaskData 
( 
description (
,( )
deadline* 2
,2 3
category4 <
)< =
;= >
Task 
task 
= 
new 
Task  
(  !
description! ,
,, -
deadline. 6
,6 7

isFinished8 B
,B C
categoryD L
)L M
;M N
return 
task 
; 
} 	
public 
Task 
AddTask 
( 
string "
description# .
,. /
DateTime0 8
deadline9 A
,A B
boolC G

isFinishedH R
,R S
stringT Z
category[ c
)c d
{ 	
Task 
task 
= 

CreateTask "
(" #
description# .
,. /
deadline0 8
,8 9

isFinished: D
,D E
categoryF N
)N O
;O P

taskMapper 
. 
AddTask 
( 
task #
)# $
;$ %
return 
task 
; 
} 	
public"" 
Task"" 

UpdateTask"" 
("" 
Task"" #
task""$ (
,""( )
string""* 0
description""1 <
,""< =
DateTime""> F
deadline""G O
,""O P
bool""Q U

isFinished""V `
,""` a
string""b h
category""i q
)""q r
{## 	
ValidateTaskData$$ 
($$ 
description$$ (
,$$( )
deadline$$* 2
,$$2 3
category$$4 <
)$$< =
;$$= >
task&& 
.&& 
Description&& 
=&& 
description&& *
;&&* +
task'' 
.'' 
Deadline'' 
='' 
deadline'' $
;''$ %
task(( 
.(( 

IsFinished(( 
=(( 

isFinished(( (
;((( )
task)) 
.)) 
Category)) 
=)) 
category)) $
;))$ %
return++ 
task++ 
;++ 
},, 	
public// 
Task// 
UpdateDeadline// "
(//" #
Task//# '
task//( ,
,//, -
DateTime//. 6
deadline//7 ?
)//? @
{00 	
if11 
(11 
deadline11 
==11 
default11 #
)11# $
{22 
throw33 
new33 
ArgumentException33 +
(33+ ,
$str33, e
)33e f
;33f g
}44 
task66 
.66 
Deadline66 
=66 
deadline66 $
;66$ %
return77 
task77 
;77 
}88 	
public;; 
List;; 
<;; 
Task;; 
>;; 
GetAllTasks;; %
(;;% &
);;& '
{<< 	
return== 

taskMapper== 
.== 
GetAllTasks== )
(==) *
)==* +
;==+ ,
}>> 	
publicAA 
TaskAA 
GetTaskByIdAA 
(AA  
intAA  #
idAA$ &
)AA& '
{BB 	
varCC 
taskCC 
=CC 

taskMapperCC !
.CC! "
GetTaskByIdCC" -
(CC- .
idCC. 0
)CC0 1
;CC1 2
ifDD 
(DD 
taskDD 
==DD 
nullDD 
)DD 
{EE 
throwFF 
newFF  
KeyNotFoundExceptionFF .
(FF. /
$strFF/ @
)FF@ A
;FFA B
}GG 
returnHH 
taskHH 
;HH 
}II 	
publicLL 
TaskLL 
MarkAsFinishedLL "
(LL" #
TaskLL# '
taskLL( ,
)LL, -
{MM 	
taskNN 
.NN 

IsFinishedNN 
=NN 
trueNN "
;NN" #
returnOO 
taskOO 
;OO 
}PP 	
publicSS 
TaskSS 
MarkAsUnfinishedSS $
(SS$ %
TaskSS% )
taskSS* .
)SS. /
{TT 	
taskUU 
.UU 

IsFinishedUU 
=UU 
falseUU #
;UU# $
returnVV 
taskVV 
;VV 
}WW 	
publicZZ 
voidZZ 
SaveTaskZZ 
(ZZ 
TaskZZ !
taskZZ" &
)ZZ& '
{[[ 	

taskMapper\\ 
.\\ 

UpdateTask\\ !
(\\! "
task\\" &
)\\& '
;\\' (
}]] 	
public`` 
void`` 

DeleteTask`` 
(`` 
Task`` #
task``$ (
)``( )
{aa 	

taskMapperbb 
.bb 

DeleteTaskbb !
(bb! "
taskbb" &
)bb& '
;bb' (
}cc 	
publicff 
boolff 
	IsOverdueff 
(ff 
Taskff "
taskff# '
)ff' (
{gg 	
returnhh 
taskhh 
.hh 
Deadlinehh  
<hh! "
DateTimehh# +
.hh+ ,
Nowhh, /
&&hh0 2
!hh3 4
taskhh4 8
.hh8 9

IsFinishedhh9 C
;hhC D
}ii 	
privatell 
voidll 
ValidateTaskDatall %
(ll% &
stringll& ,
descriptionll- 8
,ll8 9
DateTimell: B
deadlinellC K
,llK L
stringllM S
categoryllT \
)ll\ ]
{mm 	
ifnn 
(nn 
stringnn 
.nn 
IsNullOrWhiteSpacenn )
(nn) *
descriptionnn* 5
)nn5 6
)nn6 7
{oo 
throwpp 
newpp 
ArgumentExceptionpp +
(pp+ ,
$strpp, R
)ppR S
;ppS T
}qq 
ifrr 
(rr 
descriptionrr 
.rr 
Lengthrr "
>rr# $
$numrr% (
)rr( )
{ss 
throwtt 
newtt 
ArgumentExceptiontt +
(tt+ ,
$strtt, W
)ttW X
;ttX Y
}uu 
ifvv 
(vv 
stringvv 
.vv 
IsNullOrWhiteSpacevv )
(vv) *
categoryvv* 2
)vv2 3
)vv3 4
{ww 
throwxx 
newxx 
ArgumentExceptionxx +
(xx+ ,
$strxx, O
)xxO P
;xxP Q
}yy 
ifzz 
(zz 
deadlinezz 
==zz 
defaultzz #
)zz# $
{{{ 
throw|| 
new|| 
ArgumentException|| +
(||+ ,
$str||, e
)||e f
;||f g
}}} 
}~~ 	
}
 
} ÿ
TC:\Users\marcu\OneDrive\Dokumenter\GitHub\SQ_OLA_A2\SQL_OLA_A2\SQL_OLA_A2\TaskDto.cs
	namespace 	

SQL_OLA_A2
 
{ 
public 

class 
TaskDto 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
DateTime 
Deadline  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
bool 

IsFinished 
{  
get! $
;$ %
set& )
;) *
}+ ,
public		 
string		 
Category		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
}

 
} ´
QC:\Users\marcu\OneDrive\Dokumenter\GitHub\SQ_OLA_A2\SQL_OLA_A2\SQL_OLA_A2\Task.cs
	namespace 	

SQL_OLA_A2
 
; 
public 
class 
Task 
{ 
public 

Task 
( 
string 
description "
," #
DateTime$ ,
deadline- 5
,5 6
bool7 ;
isCompleted< G
,G H
stringI O
categoryP X
)X Y
{ 
Description 
= 
description !
;! "
Deadline 
= 
deadline 
; 

IsFinished		 
=		 
isCompleted		  
;		  !
Category

 
=

 
category

 
;

 
} 
public 

Task 
( 
int 
id 
, 
string 
description *
,* +
string, 2
category3 ;
,; <
DateTime= E
deadlineF N
,N O
boolP T

isFinishedU _
)_ `
{ 
Id 

= 
id 
; 
Description 
= 
description !
;! "
Category 
= 
category 
; 
Deadline 
= 
deadline 
; 

IsFinished 
= 

isFinished 
;  
} 
public 

int 
Id 
{ 
get 
; 
set 
; 
} 
public 

string 
Description 
{ 
get  #
;# $
set% (
;( )
}* +
public 

string 
Category 
{ 
get  
;  !
set" %
;% &
}' (
public 

DateTime 
Deadline 
{ 
get "
;" #
set$ '
;' (
}) *
public 

bool 

IsFinished 
{ 
get  
;  !
set" %
;% &
}' (
} ¿
TC:\Users\marcu\OneDrive\Dokumenter\GitHub\SQ_OLA_A2\SQL_OLA_A2\SQL_OLA_A2\Program.cs
	namespace 	

SQL_OLA_A2
 
; 
public 
class 
Program 
{ 
public 

static 
void 
Main 
( 
string "
[" #
]# $
args% )
)) *
{ 
var		 
builder		 
=		 
WebApplication		 $
.		$ %
CreateBuilder		% 2
(		2 3
args		3 7
)		7 8
;		8 9
builder 
. 
Services 
. 
AddDbContext %
<% & 
ApplicationDbContext& :
>: ;
(; <
options< C
=>D F
options 
. 
UseSqlServer  
(  !
builder! (
.( )
Configuration) 6
.6 7
GetConnectionString7 J
(J K
$strK ^
)^ _
)_ `
)` a
;a b
builder 
. 
Services 
. 
	AddScoped "
<" #

TaskFacade# -
>- .
(. /
)/ 0
;0 1
builder 
. 
Services 
. 
AddControllers '
(' (
)( )
;) *
builder 
. 
Services 
. 
AddAuthorization )
() *
)* +
;+ ,
builder 
. 
Services 
. #
AddEndpointsApiExplorer 0
(0 1
)1 2
;2 3
builder 
. 
Services 
. 
AddSwaggerGen &
(& '
)' (
;( )
var 
app 
= 
builder 
. 
Build 
(  
)  !
;! "
if!! 

(!! 
app!! 
.!! 
Environment!! 
.!! 
IsDevelopment!! )
(!!) *
)!!* +
)!!+ ,
{"" 	
app## 
.## 

UseSwagger## 
(## 
)## 
;## 
app$$ 
.$$ 
UseSwaggerUI$$ 
($$ 
)$$ 
;$$ 
}%% 	
app'' 
.'' 
UseHttpsRedirection'' 
(''  
)''  !
;''! "
app)) 
.)) 
UseAuthorization)) 
()) 
))) 
;)) 
app,, 
.,, 
MapControllers,, 
(,, 
),, 
;,, 
app.. 
... 
Run.. 
(.. 
).. 
;.. 
}// 
}00 
nC:\Users\marcu\OneDrive\Dokumenter\GitHub\SQ_OLA_A2\SQL_OLA_A2\SQL_OLA_A2\Migrations\20240911113544_Initial.cs
	namespace 	

SQL_OLA_A2
 
. 

Migrations 
{ 
public		 

partial		 
class		 
Initial		  
:		! "
	Migration		# ,
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Description 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
type7 ;
:; <
$str= L
,L M
nullableN V
:V W
falseX ]
)] ^
,^ _
Category 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
falseU Z
)Z [
,[ \
Deadline 
= 
table $
.$ %
Column% +
<+ ,
DateTime, 4
>4 5
(5 6
type6 :
:: ;
$str< G
,G H
nullableI Q
:Q R
falseS X
)X Y
,Y Z

IsFinished 
=  
table! &
.& '
Column' -
<- .
bool. 2
>2 3
(3 4
type4 8
:8 9
$str: ?
,? @
nullableA I
:I J
falseK P
)P Q
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% /
,/ 0
x1 2
=>3 5
x6 7
.7 8
Id8 :
): ;
;; <
} 
) 
; 
} 	
	protected   
override   
void   
Down    $
(  $ %
MigrationBuilder  % 5
migrationBuilder  6 F
)  F G
{!! 	
migrationBuilder"" 
."" 
	DropTable"" &
(""& '
name## 
:## 
$str## 
)## 
;## 
}$$ 	
}%% 
}&& C
gC:\Users\marcu\OneDrive\Dokumenter\GitHub\SQ_OLA_A2\SQL_OLA_A2\SQL_OLA_A2\Controllers\TaskController.cs
	namespace 	

SQL_OLA_A2
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public		 

class		 
TaskController		 
:		  !
ControllerBase		" 0
{

 
private 
readonly 

TaskFacade #
_taskFacade$ /
;/ 0
public 
TaskController 
(  
ApplicationDbContext 2
context3 :
): ;
{ 	
_taskFacade 
= 
new 

TaskFacade (
(( )
context) 0
)0 1
;1 2
} 	
[ 	
HttpGet	 
] 
public 
ActionResult 
< 
List  
<  !
Task! %
>% &
>& '
GetAllTasks( 3
(3 4
)4 5
{ 	
var 
tasks 
= 
_taskFacade #
.# $
GetAllTasks$ /
(/ 0
)0 1
;1 2
return 
Ok 
( 
tasks 
) 
; 
} 	
[ 	
HttpGet	 
( 
$str 
) 
] 
public 
ActionResult 
< 
Task  
>  !
GetTaskById" -
(- .
int. 1
id2 4
)4 5
{ 	
var 
task 
= 
_taskFacade "
." #
GetTaskById# .
(. /
id/ 1
)1 2
;2 3
if   
(   
task   
==   
null   
)   
{!! 
return"" 
NotFound"" 
(""  
)""  !
;""! "
}## 
return$$ 
Ok$$ 
($$ 
task$$ 
)$$ 
;$$ 
}%% 	
[(( 	
HttpPost((	 
](( 
public)) 
ActionResult)) 
<)) 
Task))  
>))  !

CreateTask))" ,
()), -
[))- .
FromBody)). 6
]))6 7
TaskDto))8 ?
taskDto))@ G
)))G H
{** 	
var++ 
task++ 
=++ 
_taskFacade++ "
.++" #
AddTask++# *
(++* +
taskDto+++ 2
.++2 3
Description++3 >
,++> ?
taskDto++@ G
.++G H
Deadline++H P
,++P Q
taskDto++R Y
.++Y Z

IsFinished++Z d
,++d e
taskDto++f m
.++m n
Category++n v
)++v w
;++w x
return,, 
CreatedAtAction,, "
(,," #
nameof,,# )
(,,) *
GetTaskById,,* 5
),,5 6
,,,6 7
new,,8 ;
{,,< =
id,,> @
=,,A B
task,,C G
.,,G H
Id,,H J
},,K L
,,,L M
task,,N R
),,R S
;,,S T
}-- 	
[00 	
HttpPut00	 
(00 
$str00 
)00 
]00 
public11 
ActionResult11 
<11 
Task11  
>11  !

UpdateTask11" ,
(11, -
int11- 0
id111 3
,113 4
[115 6
FromBody116 >
]11> ?
TaskDto11@ G
taskDto11H O
)11O P
{22 	
var33 
task33 
=33 
_taskFacade33 "
.33" #
GetTaskById33# .
(33. /
id33/ 1
)331 2
;332 3
if44 
(44 
task44 
==44 
null44 
)44 
{55 
return66 
NotFound66 
(66  
)66  !
;66! "
}77 
_taskFacade88 
.88 

UpdateTask88 "
(88" #
task88# '
,88' (
taskDto88) 0
.880 1
Description881 <
,88< =
taskDto88> E
.88E F
Deadline88F N
,88N O
taskDto88P W
.88W X

IsFinished88X b
,88b c
taskDto88d k
.88k l
Category88l t
)88t u
;88u v
_taskFacade99 
.99 
SaveTask99  
(99  !
task99! %
)99% &
;99& '
return:: 
	NoContent:: 
(:: 
):: 
;:: 
};; 	
[>> 	
HttpPut>>	 
(>> 
$str>> 
)>> 
]>>  
public?? 
ActionResult?? 
MarkTaskAsFinished?? .
(??. /
int??/ 2
id??3 5
)??5 6
{@@ 	
varAA 
taskAA 
=AA 
_taskFacadeAA "
.AA" #
GetTaskByIdAA# .
(AA. /
idAA/ 1
)AA1 2
;AA2 3
ifBB 
(BB 
taskBB 
==BB 
nullBB 
)BB 
{CC 
returnDD 
NotFoundDD 
(DD  
)DD  !
;DD! "
}EE 
_taskFacadeFF 
.FF 
MarkAsFinishedFF &
(FF& '
taskFF' +
)FF+ ,
;FF, -
_taskFacadeGG 
.GG 
SaveTaskGG  
(GG  !
taskGG! %
)GG% &
;GG& '
returnHH 
	NoContentHH 
(HH 
)HH 
;HH 
}II 	
[LL 	
HttpPutLL	 
(LL 
$strLL "
)LL" #
]LL# $
publicMM 
ActionResultMM  
MarkTaskAsUnfinishedMM 0
(MM0 1
intMM1 4
idMM5 7
)MM7 8
{NN 	
varOO 
taskOO 
=OO 
_taskFacadeOO "
.OO" #
GetTaskByIdOO# .
(OO. /
idOO/ 1
)OO1 2
;OO2 3
ifPP 
(PP 
taskPP 
==PP 
nullPP 
)PP 
{QQ 
returnRR 
NotFoundRR 
(RR  
)RR  !
;RR! "
}SS 
_taskFacadeTT 
.TT 
MarkAsUnfinishedTT (
(TT( )
taskTT) -
)TT- .
;TT. /
_taskFacadeUU 
.UU 
SaveTaskUU  
(UU  !
taskUU! %
)UU% &
;UU& '
returnVV 
	NoContentVV 
(VV 
)VV 
;VV 
}WW 	
[ZZ 	

HttpDeleteZZ	 
(ZZ 
$strZZ 
)ZZ 
]ZZ 
public[[ 
ActionResult[[ 

DeleteTask[[ &
([[& '
int[[' *
id[[+ -
)[[- .
{\\ 	
var]] 
task]] 
=]] 
_taskFacade]] "
.]]" #
GetTaskById]]# .
(]]. /
id]]/ 1
)]]1 2
;]]2 3
if^^ 
(^^ 
task^^ 
==^^ 
null^^ 
)^^ 
{__ 
return`` 
NotFound`` 
(``  
)``  !
;``! "
}aa 
_taskFacadebb 
.bb 

DeleteTaskbb "
(bb" #
taskbb# '
)bb' (
;bb( )
returncc 
	NoContentcc 
(cc 
)cc 
;cc 
}dd 	
[gg 	
HttpGetgg	 
(gg 
$strgg 
)gg  
]gg  !
publichh 
ActionResulthh 
<hh 
boolhh  
>hh  !
IsTaskOverduehh" /
(hh/ 0
inthh0 3
idhh4 6
)hh6 7
{ii 	
varjj 
taskjj 
=jj 
_taskFacadejj "
.jj" #
GetTaskByIdjj# .
(jj. /
idjj/ 1
)jj1 2
;jj2 3
ifkk 
(kk 
taskkk 
==kk 
nullkk 
)kk 
{ll 
returnmm 
NotFoundmm 
(mm  
)mm  !
;mm! "
}nn 
returnoo 
Okoo 
(oo 
_taskFacadeoo !
.oo! "
	IsOverdueoo" +
(oo+ ,
taskoo, 0
)oo0 1
)oo1 2
;oo2 3
}pp 	
}qq 
}rr 
aC:\Users\marcu\OneDrive\Dokumenter\GitHub\SQ_OLA_A2\SQL_OLA_A2\SQL_OLA_A2\ApplicationDbContext.cs
	namespace 	

SQL_OLA_A2
 
; 
public 
class  
ApplicationDbContext !
:" #
	DbContext$ -
{ 
public 

DbSet 
< 
Task 
> 
Tasks 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
 
ApplicationDbContext		 
(		  
DbContextOptions		  0
<		0 1 
ApplicationDbContext		1 E
>		E F
options		G N
)		N O
:		P Q
base		R V
(		V W
options		W ^
)		^ _
{

 
} 
public 
 
ApplicationDbContext 
(  
)  !
{ 
} 
	protected 
override 
void 
OnConfiguring )
() *#
DbContextOptionsBuilder* A
optionsBuilderB P
)P Q
{ 
if 

( 
! 
optionsBuilder 
. 
IsConfigured (
)( )
{ 	
optionsBuilder 
. 
UseSqlServer '
(' (
$str	( 
)
 
;
 
} 	
} 
} 